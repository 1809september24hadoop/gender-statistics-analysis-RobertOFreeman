package com.revature.testificate;

import java.util.ArrayList;
import java.util.List;

import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mrunit.mapreduce.MapDriver;
import org.apache.hadoop.mrunit.mapreduce.MapReduceDriver;
import org.apache.hadoop.mrunit.mapreduce.ReduceDriver;
import org.junit.Before;
import org.junit.Test;

import com.revature.percentfememp.PercentFemEmpMapper;
import com.revature.percentfememp.PercentFemEmpReducer;

public class Testinatord {
	public static String inputS ="\"Afghanistan\",\"AFG\",\"Employment to population ratio, 15+, male (%) (modeled ILO estimate)\",\"SL.EMP.TOTL.SP.FE.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"16.0520000457764\",\"15.9750003814697\",\"15.7880001068115\",\"15.6540002822876\",\"15.6859998703003\",\"15.3699998855591\",\"15.1820001602173\",\"15.0469999313354\",\"14.9689998626709\",\"14.7880001068115\",\"14.960000038147\",\"15.3400001525879\",\"13.7880001068115\",\"14.0319995880127\",\"14.289999961853\",\"14.1940002441406\",\"14.1420001983643\",\"14.1619997024536\",\"14.2810001373291\",\"14.5129995346069\",\"14.9200000762939\",\"15.4130001068115\",\"15.9630002975464\",\"16.6259994506836\",\"16.7220001220703\",\"16.8190002441406\",";

	public static String outputS = "Afghanistan,";
	public static Double outputD = 2.0310001373291;
  /*
   * Declare harnesses that let you test a mapper, a reducer, and
   * a mapper and a reducer working together.
   */
  private MapDriver<LongWritable, Text, Text, IntWritable> mapDriver;
  private ReduceDriver<Text, IntWritable, Text, DoubleWritable> reduceDriver;
  private MapReduceDriver<LongWritable, Text, Text, IntWritable, Text, DoubleWritable> mapReduceDriver;

  /*
   * Set up the test. This method will be called before every test.
   */
  @Before
  public void setUp() {

    /*
     * Set up the mapper test harness.
     */
    PercentFemEmpMapper mapper = new PercentFemEmpMapper();
    mapDriver = new MapDriver<LongWritable, Text, Text, IntWritable>();
    mapDriver.setMapper(mapper);

    /*
     * Set up the reducer test harness.
     */
    PercentFemEmpReducer reducer = new  PercentFemEmpReducer();
    reduceDriver = new ReduceDriver<Text, IntWritable, Text, DoubleWritable>();
    reduceDriver.setReducer(reducer);

    /*
     * Set up the mapper/reducer test harness.
     */
    mapReduceDriver = new MapReduceDriver<LongWritable, Text, Text, IntWritable, Text, DoubleWritable>();
    mapReduceDriver.setMapper(mapper);
    mapReduceDriver.setReducer(reducer);
  }

  /*
   * Test the mapper.
   */
  @Test
  public void testMapper() {

    /*
     * For this test, the mapper's input will be "1 cat cat dog" 
     */
    mapDriver.withInput(new LongWritable(1), new Text(inputS));

    /*
     * The expected output is "cat 1", "cat 1", and "dog 1".
     */
    mapDriver.withOutput(new Text(inputS), new IntWritable(0));

    /*
     * Run the test.
     */
    mapDriver.runTest();
  }

  /*
   * Test the reducer.
   */
  @Test
  public void testReducer() {

    List<IntWritable> values = new ArrayList<IntWritable>();
    values.add(new IntWritable(1));

    /*
     * For this test, the reducer's input will be "cat 1 1".
     */
    reduceDriver.withInput(new Text(inputS), values);

    /*
     * The expected output is "cat 2"
     */
    reduceDriver.withOutput(new Text(outputS), new DoubleWritable(outputD));

    /*
     * Run the test.
     */
    reduceDriver.runTest();
  }

  /*
   * Test the mapper and reducer working together.
   */
  @Test
  public void testMapReduce() {

    /*
     * For this test, the mapper's input will be "1 cat cat dog" 
     */
    mapReduceDriver.withInput(new LongWritable(1), new Text(inputS));

    /*
     * The expected output (from the reducer) is "cat 2", "dog 1". 
     */
    mapReduceDriver.addOutput(new Text(outputS), new DoubleWritable(outputD));

    /*
     * Run the test.
     */
    mapReduceDriver.runTest();
  }
}
